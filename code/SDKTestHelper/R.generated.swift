//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.localizable` struct is generated, and contains static references to 251 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: 4G OTA
      ///
      /// Key: 4G OTA
      ///
      /// Locales: en, zh-Hans
      var gotA: RswiftResources.StringResource { .init(key: "4G OTA", tableName: "Localizable", source: source, developmentValue: "4G OTA", comment: nil) }

      /// en translation: AI info helper
      ///
      /// Key: AI info helper
      ///
      /// Locales: en, zh-Hans
      var aiInfoHelper: RswiftResources.StringResource { .init(key: "AI info helper", tableName: "Localizable", source: source, developmentValue: "AI info helper", comment: nil) }

      /// en translation: ANC settings
      ///
      /// Key: ANC settings
      ///
      /// Locales: en, zh-Hans
      var ancSettings: RswiftResources.StringResource { .init(key: "ANC settings", tableName: "Localizable", source: source, developmentValue: "ANC settings", comment: nil) }

      /// en translation: Add
      ///
      /// Key: Add
      ///
      /// Locales: en, zh-Hans
      var add: RswiftResources.StringResource { .init(key: "Add", tableName: "Localizable", source: source, developmentValue: "Add", comment: nil) }

      /// en translation: Add alarm
      ///
      /// Key: Add alarm
      ///
      /// Locales: en, zh-Hans
      var addAlarm: RswiftResources.StringResource { .init(key: "Add alarm", tableName: "Localizable", source: source, developmentValue: "Add alarm", comment: nil) }

      /// en translation: Adding resources to the device
      ///
      /// Key: Adding resources to the device
      ///
      /// Locales: en, zh-Hans
      var addingResourcesToTheDevice: RswiftResources.StringResource { .init(key: "Adding resources to the device", tableName: "Localizable", source: source, developmentValue: "Adding resources to the device", comment: nil) }

      /// en translation: After deletion, you need to re-run [Directory Browse] to refresh the content.
      ///
      /// Key: After deletion, you need to re-run [Directory Browse] to refresh the content.
      ///
      /// Locales: en, zh-Hans
      var afterDeletionYouNeedToReRunDirectoryBrowseToRefreshTheContent: RswiftResources.StringResource { .init(key: "After deletion, you need to re-run [Directory Browse] to refresh the content.", tableName: "Localizable", source: source, developmentValue: "After deletion, you need to re-run [Directory Browse] to refresh the content.", comment: nil) }

      /// en translation: After downloading, you can go to [Downloaded] to view it.
      ///
      /// Key: After downloading, you can go to [Downloaded] to view it.
      ///
      /// Locales: en, zh-Hans
      var afterDownloadingYouCanGoToDownloadedToViewIt: RswiftResources.StringResource { .init(key: "After downloading, you can go to [Downloaded] to view it.", tableName: "Localizable", source: source, developmentValue: "After downloading, you can go to [Downloaded] to view it.", comment: nil) }

      /// en translation: Alarm
      ///
      /// Key: Alarm
      ///
      /// Locales: en, zh-Hans
      var alarm: RswiftResources.StringResource { .init(key: "Alarm", tableName: "Localizable", source: source, developmentValue: "Alarm", comment: nil) }

      /// en translation: Alarm Detail
      ///
      /// Key: Alarm Detail
      ///
      /// Locales: en, zh-Hans
      var alarmDetail: RswiftResources.StringResource { .init(key: "Alarm Detail", tableName: "Localizable", source: source, developmentValue: "Alarm Detail", comment: nil) }

      /// en translation: Alarm name:
      ///
      /// Key: Alarm name:
      ///
      /// Locales: en, zh-Hans
      var alarmName: RswiftResources.StringResource { .init(key: "Alarm name:", tableName: "Localizable", source: source, developmentValue: "Alarm name:", comment: nil) }

      /// en translation: Album
      ///
      /// Key: Album
      ///
      /// Locales: en, zh-Hans
      var album: RswiftResources.StringResource { .init(key: "Album", tableName: "Localizable", source: source, developmentValue: "Album", comment: nil) }

      /// en translation: At least one contact must be added
      ///
      /// Key: At least one contact must be added
      ///
      /// Locales: en, zh-Hans
      var atLeastOneContactMustBeAdded: RswiftResources.StringResource { .init(key: "At least one contact must be added", tableName: "Localizable", source: source, developmentValue: "At least one contact must be added", comment: nil) }

      /// en translation: Auracast Assistant
      ///
      /// Key: Auracast Assistant
      ///
      /// Locales: en, zh-Hans
      var auracastAssistant: RswiftResources.StringResource { .init(key: "Auracast Assistant", tableName: "Localizable", source: source, developmentValue: "Auracast Assistant", comment: nil) }

      /// en translation: Auracast Protocol
      ///
      /// Key: Auracast Protocol
      ///
      /// Locales: en, zh-Hans
      var auracastProtocol: RswiftResources.StringResource { .init(key: "Auracast Protocol", tableName: "Localizable", source: source, developmentValue: "Auracast Protocol", comment: nil) }

      /// en translation: Auracast broadcast resources
      ///
      /// Key: Auracast broadcast resources
      ///
      /// Locales: en, zh-Hans
      var auracastBroadcastResources: RswiftResources.StringResource { .init(key: "Auracast broadcast resources", tableName: "Localizable", source: source, developmentValue: "Auracast broadcast resources", comment: nil) }

      /// en translation: Authentication pairing
      ///
      /// Key: Authentication pairing
      ///
      /// Locales: en, zh-Hans
      var authenticationPairing: RswiftResources.StringResource { .init(key: "Authentication pairing", tableName: "Localizable", source: source, developmentValue: "Authentication pairing", comment: nil) }

      /// en translation: Back
      ///
      /// Key: Back
      ///
      /// Locales: en, zh-Hans
      var back: RswiftResources.StringResource { .init(key: "Back", tableName: "Localizable", source: source, developmentValue: "Back", comment: nil) }

      /// en translation: Browse downloaded
      ///
      /// Key: Browse downloaded
      ///
      /// Locales: en, zh-Hans
      var browseDownloaded: RswiftResources.StringResource { .init(key: "Browse downloaded", tableName: "Localizable", source: source, developmentValue: "Browse downloaded", comment: nil) }

      /// en translation: By Record Custom Voices
      ///
      /// Key: By Record Custom Voices
      ///
      /// Locales: en, zh-Hans
      var byRecordCustomVoices: RswiftResources.StringResource { .init(key: "By Record Custom Voices", tableName: "Localizable", source: source, developmentValue: "By Record Custom Voices", comment: nil) }

      /// en translation: By SandBox Voices
      ///
      /// Key: By SandBox Voices
      ///
      /// Locales: en, zh-Hans
      var bySandBoxVoices: RswiftResources.StringResource { .init(key: "By SandBox Voices", tableName: "Localizable", source: source, developmentValue: "By SandBox Voices", comment: nil) }

      /// en translation: Call Log
      ///
      /// Key: Call Log
      ///
      /// Locales: en, zh-Hans
      var callLog: RswiftResources.StringResource { .init(key: "Call Log", tableName: "Localizable", source: source, developmentValue: "Call Log", comment: nil) }

      /// en translation: Camera
      ///
      /// Key: Camera
      ///
      /// Locales: en, zh-Hans
      var camera: RswiftResources.StringResource { .init(key: "Camera", tableName: "Localizable", source: source, developmentValue: "Camera", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: Cancel
      ///
      /// Locales: en, zh-Hans
      var cancel: RswiftResources.StringResource { .init(key: "Cancel", tableName: "Localizable", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: Classic
      ///
      /// Key: Classic
      ///
      /// Locales: en, zh-Hans
      var classic: RswiftResources.StringResource { .init(key: "Classic", tableName: "Localizable", source: source, developmentValue: "Classic", comment: nil) }

      /// en translation: Clean
      ///
      /// Key: Clean
      ///
      /// Locales: en, zh-Hans
      var clean: RswiftResources.StringResource { .init(key: "Clean", tableName: "Localizable", source: source, developmentValue: "Clean", comment: nil) }

      /// en translation: Color screen cabin
      ///
      /// Key: Color screen cabin
      ///
      /// Locales: en, zh-Hans
      var colorScreenCabin: RswiftResources.StringResource { .init(key: "Color screen cabin", tableName: "Localizable", source: source, developmentValue: "Color screen cabin", comment: nil) }

      /// en translation: Command execution failed
      ///
      /// Key: Command execution failed
      ///
      /// Locales: en, zh-Hans
      var commandExecutionFailed: RswiftResources.StringResource { .init(key: "Command execution failed", tableName: "Localizable", source: source, developmentValue: "Command execution failed", comment: nil) }

      /// en translation: Configure the function of clicking the headset
      ///
      /// Key: Configure the function of clicking the headset
      ///
      /// Locales: en, zh-Hans
      var configureTheFunctionOfClickingTheHeadset: RswiftResources.StringResource { .init(key: "Configure the function of clicking the headset", tableName: "Localizable", source: source, developmentValue: "Configure the function of clicking the headset", comment: nil) }

      /// en translation: Configure the status lights of the headset
      ///
      /// Key: Configure the status lights of the headset
      ///
      /// Locales: en, zh-Hans
      var configureTheStatusLightsOfTheHeadset: RswiftResources.StringResource { .init(key: "Configure the status lights of the headset", tableName: "Localizable", source: source, developmentValue: "Configure the status lights of the headset", comment: nil) }

      /// en translation: Confirm
      ///
      /// Key: Confirm
      ///
      /// Locales: en, zh-Hans
      var confirm: RswiftResources.StringResource { .init(key: "Confirm", tableName: "Localizable", source: source, developmentValue: "Confirm", comment: nil) }

      /// en translation: Connect failed
      ///
      /// Key: Connect failed
      ///
      /// Locales: en, zh-Hans
      var connectFailed: RswiftResources.StringResource { .init(key: "Connect failed", tableName: "Localizable", source: source, developmentValue: "Connect failed", comment: nil) }

      /// en translation: Connected
      ///
      /// Key: Connected
      ///
      /// Locales: en, zh-Hans
      var connected: RswiftResources.StringResource { .init(key: "Connected", tableName: "Localizable", source: source, developmentValue: "Connected", comment: nil) }

      /// en translation: Contacts
      ///
      /// Key: Contacts
      ///
      /// Locales: en, zh-Hans
      var contacts: RswiftResources.StringResource { .init(key: "Contacts", tableName: "Localizable", source: source, developmentValue: "Contacts", comment: nil) }

      /// en translation: Convert to PCM and play
      ///
      /// Key: Convert to PCM and play
      ///
      /// Locales: en, zh-Hans
      var convertToPCMAndPlay: RswiftResources.StringResource { .init(key: "Convert to PCM and play", tableName: "Localizable", source: source, developmentValue: "Convert to PCM and play", comment: nil) }

      /// en translation: Country
      ///
      /// Key: Country
      ///
      /// Locales: en, zh-Hans
      var country: RswiftResources.StringResource { .init(key: "Country", tableName: "Localizable", source: source, developmentValue: "Country", comment: nil) }

      /// en translation: Crating
      ///
      /// Key: Crating
      ///
      /// Locales: en, zh-Hans
      var crating: RswiftResources.StringResource { .init(key: "Crating", tableName: "Localizable", source: source, developmentValue: "Crating", comment: nil) }

      /// en translation: Create success
      ///
      /// Key: Create success
      ///
      /// Locales: en, zh-Hans
      var createSuccess: RswiftResources.StringResource { .init(key: "Create success", tableName: "Localizable", source: source, developmentValue: "Create success", comment: nil) }

      /// en translation: Creating...
      ///
      /// Key: Creating...
      ///
      /// Locales: en, zh-Hans
      var creating: RswiftResources.StringResource { .init(key: "Creating...", tableName: "Localizable", source: source, developmentValue: "Creating...", comment: nil) }

      /// en translation: Custom
      ///
      /// Key: Custom
      ///
      /// Locales: en, zh-Hans
      var custom: RswiftResources.StringResource { .init(key: "Custom", tableName: "Localizable", source: source, developmentValue: "Custom", comment: nil) }

      /// en translation: Customer Command
      ///
      /// Key: Customer Command
      ///
      /// Locales: en, zh-Hans
      var customerCommand: RswiftResources.StringResource { .init(key: "Customer Command", tableName: "Localizable", source: source, developmentValue: "Customer Command", comment: nil) }

      /// en translation: Customize BLE Connection
      ///
      /// Key: Customize BLE Connection
      ///
      /// Locales: en, zh-Hans
      var customizeBLEConnection: RswiftResources.StringResource { .init(key: "Customize BLE Connection", tableName: "Localizable", source: source, developmentValue: "Customize BLE Connection", comment: nil) }

      /// en translation: Customize Transport path
      ///
      /// Key: Customize Transport path
      ///
      /// Locales: en, zh-Hans
      var customizeTransportPath: RswiftResources.StringResource { .init(key: "Customize Transport path", tableName: "Localizable", source: source, developmentValue: "Customize Transport path", comment: nil) }

      /// en translation: Dance
      ///
      /// Key: Dance
      ///
      /// Locales: en, zh-Hans
      var dance: RswiftResources.StringResource { .init(key: "Dance", tableName: "Localizable", source: source, developmentValue: "Dance", comment: nil) }

      /// en translation: Data:
      ///
      /// Key: Data:
      ///
      /// Locales: en, zh-Hans
      var data: RswiftResources.StringResource { .init(key: "Data:", tableName: "Localizable", source: source, developmentValue: "Data:", comment: nil) }

      /// en translation: Default Set
      ///
      /// Key: Default Set
      ///
      /// Locales: en, zh-Hans
      var defaultSet: RswiftResources.StringResource { .init(key: "Default Set", tableName: "Localizable", source: source, developmentValue: "Default Set", comment: nil) }

      /// en translation: Delete
      ///
      /// Key: Delete
      ///
      /// Locales: en, zh-Hans
      var delete: RswiftResources.StringResource { .init(key: "Delete", tableName: "Localizable", source: source, developmentValue: "Delete", comment: nil) }

      /// en translation: Delete file？
      ///
      /// Key: Delete file？
      ///
      /// Locales: en, zh-Hans
      var deleteFile: RswiftResources.StringResource { .init(key: "Delete file？", tableName: "Localizable", source: source, developmentValue: "Delete file？", comment: nil) }

      /// en translation: Delete success
      ///
      /// Key: Delete success
      ///
      /// Locales: en, zh-Hans
      var deleteSuccess: RswiftResources.StringResource { .init(key: "Delete success", tableName: "Localizable", source: source, developmentValue: "Delete success", comment: nil) }

      /// en translation: Deletion of watch dial successful
      ///
      /// Key: Deletion of watch dial successful
      ///
      /// Locales: en, zh-Hans
      var deletionOfWatchDialSuccessful: RswiftResources.StringResource { .init(key: "Deletion of watch dial successful", tableName: "Localizable", source: source, developmentValue: "Deletion of watch dial successful", comment: nil) }

      /// en translation: Device EDR addr:
      ///
      /// Key: Device EDR addr:
      ///
      /// Locales: en, zh-Hans
      var deviceEDRAddr: RswiftResources.StringResource { .init(key: "Device EDR addr:", tableName: "Localizable", source: source, developmentValue: "Device EDR addr:", comment: nil) }

      /// en translation: Device History
      ///
      /// Key: Device History
      ///
      /// Locales: en, zh-Hans
      var deviceHistory: RswiftResources.StringResource { .init(key: "Device History", tableName: "Localizable", source: source, developmentValue: "Device History", comment: nil) }

      /// en translation: Device Info
      ///
      /// Key: Device Info
      ///
      /// Locales: en, zh-Hans
      var deviceInfo: RswiftResources.StringResource { .init(key: "Device Info", tableName: "Localizable", source: source, developmentValue: "Device Info", comment: nil) }

      /// en translation: Device Name:
      ///
      /// Key: Device Name:
      ///
      /// Locales: en, zh-Hans
      var deviceName: RswiftResources.StringResource { .init(key: "Device Name:", tableName: "Localizable", source: source, developmentValue: "Device Name:", comment: nil) }

      /// en translation: Device rings
      ///
      /// Key: Device rings
      ///
      /// Locales: en, zh-Hans
      var deviceRings: RswiftResources.StringResource { .init(key: "Device rings", tableName: "Localizable", source: source, developmentValue: "Device rings", comment: nil) }

      /// en translation: Dial Transmission
      ///
      /// Key: Dial Transmission
      ///
      /// Locales: en, zh-Hans
      var dialTransmission: RswiftResources.StringResource { .init(key: "Dial Transmission", tableName: "Localizable", source: source, developmentValue: "Dial Transmission", comment: nil) }

      /// en translation: Dial info extented get
      ///
      /// Key: Dial info extented get
      ///
      /// Locales: en, zh-Hans
      var dialInfoExtentedGet: RswiftResources.StringResource { .init(key: "Dial info extented get", tableName: "Localizable", source: source, developmentValue: "Dial info extented get", comment: nil) }

      /// en translation: Directory Browse
      ///
      /// Key: Directory Browse
      ///
      /// Locales: en, zh-Hans
      var directoryBrowse: RswiftResources.StringResource { .init(key: "Directory Browse", tableName: "Localizable", source: source, developmentValue: "Directory Browse", comment: nil) }

      /// en translation: Disconnect
      ///
      /// Key: Disconnect
      ///
      /// Locales: en, zh-Hans
      var disconnect: RswiftResources.StringResource { .init(key: "Disconnect", tableName: "Localizable", source: source, developmentValue: "Disconnect", comment: nil) }

      /// en translation: Do you want to read back this file from the device? %@ The retrieved file can be viewed in [Select File]
      ///
      /// Key: Do you want to read back this file from the device? %@ The retrieved file can be viewed in [Select File]
      ///
      /// Locales: en, zh-Hans
      var doYouWantToReadBackThisFileFromTheDeviceTheRetrievedFileCanBeViewedInSelectFile: RswiftResources.StringResource1<String> { .init(key: "Do you want to read back this file from the device?\n%@\nThe retrieved file can be viewed in [Select File]", tableName: "Localizable", source: source, developmentValue: "Do you want to read back this file from the device?\n%@\nThe retrieved file can be viewed in [Select File]", comment: nil) }

      /// en translation: Download File？
      ///
      /// Key: Download File？
      ///
      /// Locales: en, zh-Hans
      var downloadFile: RswiftResources.StringResource { .init(key: "Download File？", tableName: "Localizable", source: source, developmentValue: "Download File？", comment: nil) }

      /// en translation: Downloaded
      ///
      /// Key: Downloaded
      ///
      /// Locales: en, zh-Hans
      var downloaded: RswiftResources.StringResource { .init(key: "Downloaded", tableName: "Localizable", source: source, developmentValue: "Downloaded", comment: nil) }

      /// en translation: Downloaded File
      ///
      /// Key: Downloaded File
      ///
      /// Locales: en, zh-Hans
      var downloadedFile: RswiftResources.StringResource { .init(key: "Downloaded File", tableName: "Localizable", source: source, developmentValue: "Downloaded File", comment: nil) }

      /// en translation: EQ Setting
      ///
      /// Key: EQ Setting
      ///
      /// Locales: en, zh-Hans
      var eqSetting: RswiftResources.StringResource { .init(key: "EQ Setting", tableName: "Localizable", source: source, developmentValue: "EQ Setting", comment: nil) }

      /// en translation: Edit
      ///
      /// Key: Edit
      ///
      /// Locales: en, zh-Hans
      var edit: RswiftResources.StringResource { .init(key: "Edit", tableName: "Localizable", source: source, developmentValue: "Edit", comment: nil) }

      /// en translation: End of browsing
      ///
      /// Key: End of browsing
      ///
      /// Locales: en, zh-Hans
      var endOfBrowsing: RswiftResources.StringResource { .init(key: "End of browsing", tableName: "Localizable", source: source, developmentValue: "End of browsing", comment: nil) }

      /// en translation: Enter the UUID of the connected peripheral
      ///
      /// Key: Enter the UUID of the connected peripheral
      ///
      /// Locales: en, zh-Hans
      var enterTheUUIDOfTheConnectedPeripheral: RswiftResources.StringResource { .init(key: "Enter the UUID of the connected peripheral", tableName: "Localizable", source: source, developmentValue: "Enter the UUID of the connected peripheral", comment: nil) }

      /// en translation: Enter the specified folder, such as Document/ABC/or Download/
      ///
      /// Key: Enter the specified folder, such as Document/ABC/or Download/
      ///
      /// Locales: en, zh-Hans
      var enterTheSpecifiedFolderSuchAsDocumentABCOrDownload: RswiftResources.StringResource { .init(key: "Enter the specified folder, such as Document/ABC/or Download/", tableName: "Localizable", source: source, developmentValue: "Enter the specified folder, such as Document/ABC/or Download/", comment: nil) }

      /// en translation: Error requesting device information
      ///
      /// Key: Error requesting device information
      ///
      /// Locales: en, zh-Hans
      var errorRequestingDeviceInformation: RswiftResources.StringResource { .init(key: "Error requesting device information", tableName: "Localizable", source: source, developmentValue: "Error requesting device information", comment: nil) }

      /// en translation: Everyday
      ///
      /// Key: Everyday
      ///
      /// Locales: en, zh-Hans
      var everyday: RswiftResources.StringResource { .init(key: "Everyday", tableName: "Localizable", source: source, developmentValue: "Everyday", comment: nil) }

      /// en translation: Exit Translate Mode
      ///
      /// Key: Exit Translate Mode
      ///
      /// Locales: en, zh-Hans
      var exitTranslateMode: RswiftResources.StringResource { .init(key: "Exit Translate Mode", tableName: "Localizable", source: source, developmentValue: "Exit Translate Mode", comment: nil) }

      /// en translation: File
      ///
      /// Key: File
      ///
      /// Locales: en, zh-Hans
      var file: RswiftResources.StringResource { .init(key: "File", tableName: "Localizable", source: source, developmentValue: "File", comment: nil) }

      /// en translation: File Browser
      ///
      /// Key: File Browser
      ///
      /// Locales: en, zh-Hans
      var fileBrowser: RswiftResources.StringResource { .init(key: "File Browser", tableName: "Localizable", source: source, developmentValue: "File Browser", comment: nil) }

      /// en translation: File List
      ///
      /// Key: File List
      ///
      /// Locales: en, zh-Hans
      var fileList: RswiftResources.StringResource { .init(key: "File List", tableName: "Localizable", source: source, developmentValue: "File List", comment: nil) }

      /// en translation: File Name
      ///
      /// Key: File Name
      ///
      /// Locales: en, zh-Hans
      var fileName: RswiftResources.StringResource { .init(key: "File Name", tableName: "Localizable", source: source, developmentValue: "File Name", comment: nil) }

      /// en translation: File Name
      ///
      /// Key: File Name_1
      ///
      /// Locales: en, zh-Hans
      var fileName_1: RswiftResources.StringResource { .init(key: "File Name_1", tableName: "Localizable", source: source, developmentValue: "File Name", comment: nil) }

      /// en translation: File Transport
      ///
      /// Key: File Transport
      ///
      /// Locales: en, zh-Hans
      var fileTransport: RswiftResources.StringResource { .init(key: "File Transport", tableName: "Localizable", source: source, developmentValue: "File Transport", comment: nil) }

      /// en translation: File Type
      ///
      /// Key: File Type
      ///
      /// Locales: en, zh-Hans
      var fileType: RswiftResources.StringResource { .init(key: "File Type", tableName: "Localizable", source: source, developmentValue: "File Type", comment: nil) }

      /// en translation: File cluster
      ///
      /// Key: File cluster
      ///
      /// Locales: en, zh-Hans
      var fileCluster: RswiftResources.StringResource { .init(key: "File cluster", tableName: "Localizable", source: source, developmentValue: "File cluster", comment: nil) }

      /// en translation: File content
      ///
      /// Key: File content
      ///
      /// Locales: en, zh-Hans
      var fileContent: RswiftResources.StringResource { .init(key: "File content", tableName: "Localizable", source: source, developmentValue: "File content", comment: nil) }

      /// en translation: Fill in the file type: 0x01 = Contacts 0x02 = Exercise records 0x03 = Heart rate data 0x04 = Blood oxygen data 0x05 = Sleep data 0x06 = Message data 0x07 = Weather data 0x08 = Call records 0x09 = Step count Data 0xFF = weight data
      ///
      /// Key: Fill in the file type: 0x01 = Contacts 0x02 = Exercise records 0x03 = Heart rate data 0x04 = Blood oxygen data 0x05 = Sleep data 0x06 = Message data 0x07 = Weather data 0x08 = Call records 0x09 = Step count Data 0xFF = weight data
      ///
      /// Locales: en, zh-Hans
      var fillInTheFileType0x01Contacts0x02ExerciseRecords0x03HeartRateData0x04BloodOxygenData0x05SleepData0x06MessageData0x07WeatherData0x08CallRecords0x09StepCountData0xFFWeightData: RswiftResources.StringResource { .init(key: "Fill in the file type:\n0x01 = Contacts\n0x02 = Exercise records\n0x03 = Heart rate data\n0x04 = Blood oxygen data\n0x05 = Sleep data\n0x06 = Message data\n0x07 = Weather data\n0x08 = Call records\n0x09 = Step count Data\n0xFF = weight data", tableName: "Localizable", source: source, developmentValue: "Fill in the file type:\n0x01 = Contacts\n0x02 = Exercise records\n0x03 = Heart rate data\n0x04 = Blood oxygen data\n0x05 = Sleep data\n0x06 = Message data\n0x07 = Weather data\n0x08 = Call records\n0x09 = Step count Data\n0xFF = weight data", comment: nil) }

      /// en translation: Fill in the file type: 0x01..
      ///
      /// Key: Fill in the file type: 0x01..
      ///
      /// Locales: en, zh-Hans
      var fillInTheFileType0x01: RswiftResources.StringResource { .init(key: "Fill in the file type: 0x01..", tableName: "Localizable", source: source, developmentValue: "Fill in the file type: 0x01..", comment: nil) }

      /// en translation: Filter prefix
      ///
      /// Key: Filter prefix
      ///
      /// Locales: en, zh-Hans
      var filterPrefix: RswiftResources.StringResource { .init(key: "Filter prefix", tableName: "Localizable", source: source, developmentValue: "Filter prefix", comment: nil) }

      /// en translation: Fir
      ///
      /// Key: Fir
      ///
      /// Locales: en, zh-Hans
      var fir: RswiftResources.StringResource { .init(key: "Fir", tableName: "Localizable", source: source, developmentValue: "Fir", comment: nil) }

      /// en translation: Functions
      ///
      /// Key: Functions
      ///
      /// Locales: en, zh-Hans
      var functions: RswiftResources.StringResource { .init(key: "Functions", tableName: "Localizable", source: source, developmentValue: "Functions", comment: nil) }

      /// en translation: Game mode settings
      ///
      /// Key: Game mode settings
      ///
      /// Locales: en, zh-Hans
      var gameModeSettings: RswiftResources.StringResource { .init(key: "Game mode settings", tableName: "Localizable", source: source, developmentValue: "Game mode settings", comment: nil) }

      /// en translation: Get Contacts
      ///
      /// Key: Get Contacts
      ///
      /// Locales: en, zh-Hans
      var getContacts: RswiftResources.StringResource { .init(key: "Get Contacts", tableName: "Localizable", source: source, developmentValue: "Get Contacts", comment: nil) }

      /// en translation: Get current screen information
      ///
      /// Key: Get current screen information
      ///
      /// Locales: en, zh-Hans
      var getCurrentScreenInformation: RswiftResources.StringResource { .init(key: "Get current screen information", tableName: "Localizable", source: source, developmentValue: "Get current screen information", comment: nil) }

      /// en translation: Get current settings
      ///
      /// Key: Get current settings
      ///
      /// Locales: en, zh-Hans
      var getCurrentSettings: RswiftResources.StringResource { .init(key: "Get current settings", tableName: "Localizable", source: source, developmentValue: "Get current settings", comment: nil) }

      /// en translation: Get device prompt info
      ///
      /// Key: Get device prompt info
      ///
      /// Locales: en, zh-Hans
      var getDevicePromptInfo: RswiftResources.StringResource { .init(key: "Get device prompt info", tableName: "Localizable", source: source, developmentValue: "Get device prompt info", comment: nil) }

      /// en translation: Get flashlight
      ///
      /// Key: Get flashlight
      ///
      /// Locales: en, zh-Hans
      var getFlashlight: RswiftResources.StringResource { .init(key: "Get flashlight", tableName: "Localizable", source: source, developmentValue: "Get flashlight", comment: nil) }

      /// en translation: Get headphone information
      ///
      /// Key: Get headphone information
      ///
      /// Locales: en, zh-Hans
      var getHeadphoneInformation: RswiftResources.StringResource { .init(key: "Get headphone information", tableName: "Localizable", source: source, developmentValue: "Get headphone information", comment: nil) }

      /// en translation: Get screen brightness
      ///
      /// Key: Get screen brightness
      ///
      /// Locales: en, zh-Hans
      var getScreenBrightness: RswiftResources.StringResource { .init(key: "Get screen brightness", tableName: "Localizable", source: source, developmentValue: "Get screen brightness", comment: nil) }

      /// en translation: Gif to Device
      ///
      /// Key: Gif to Device
      ///
      /// Locales: en, zh-Hans
      var gifToDevice: RswiftResources.StringResource { .init(key: "Gif to Device", tableName: "Localizable", source: source, developmentValue: "Gif to Device", comment: nil) }

      /// en translation: Headphone button functions
      ///
      /// Key: Headphone button functions
      ///
      /// Locales: en, zh-Hans
      var headphoneButtonFunctions: RswiftResources.StringResource { .init(key: "Headphone button functions", tableName: "Localizable", source: source, developmentValue: "Headphone button functions", comment: nil) }

      /// en translation: Headphone/TWS information
      ///
      /// Key: Headphone/TWS information
      ///
      /// Locales: en, zh-Hans
      var headphoneTWSInformation: RswiftResources.StringResource { .init(key: "Headphone/TWS information", tableName: "Localizable", source: source, developmentValue: "Headphone/TWS information", comment: nil) }

      /// en translation: HeartRate
      ///
      /// Key: HeartRate
      ///
      /// Locales: en, zh-Hans
      var heartRate: RswiftResources.StringResource { .init(key: "HeartRate", tableName: "Localizable", source: source, developmentValue: "HeartRate", comment: nil) }

      /// en translation: History Record
      ///
      /// Key: History Record
      ///
      /// Locales: en, zh-Hans
      var historyRecord: RswiftResources.StringResource { .init(key: "History Record", tableName: "Localizable", source: source, developmentValue: "History Record", comment: nil) }

      /// en translation: Import configuration
      ///
      /// Key: Import configuration
      ///
      /// Locales: en, zh-Hans
      var importConfiguration: RswiftResources.StringResource { .init(key: "Import configuration", tableName: "Localizable", source: source, developmentValue: "Import configuration", comment: nil) }

      /// en translation: Initializing...
      ///
      /// Key: Initializing...
      ///
      /// Locales: en, zh-Hans
      var initializing: RswiftResources.StringResource { .init(key: "Initializing...", tableName: "Localizable", source: source, developmentValue: "Initializing...", comment: nil) }

      /// en translation: Input text cannot be empty
      ///
      /// Key: Input text cannot be empty
      ///
      /// Locales: en, zh-Hans
      var inputTextCannotBeEmpty: RswiftResources.StringResource { .init(key: "Input text cannot be empty", tableName: "Localizable", source: source, developmentValue: "Input text cannot be empty", comment: nil) }

      /// en translation: JL SDK Test Helper
      ///
      /// Key: JL SDK Test Helper
      ///
      /// Locales: en, zh-Hans
      var jlsdkTestHelper: RswiftResources.StringResource { .init(key: "JL SDK Test Helper", tableName: "Localizable", source: source, developmentValue: "JL SDK Test Helper", comment: nil) }

      /// en translation: Jazz
      ///
      /// Key: Jazz
      ///
      /// Locales: en, zh-Hans
      var jazz: RswiftResources.StringResource { .init(key: "Jazz", tableName: "Localizable", source: source, developmentValue: "Jazz", comment: nil) }

      /// en translation: Latin
      ///
      /// Key: Latin
      ///
      /// Locales: en, zh-Hans
      var latin: RswiftResources.StringResource { .init(key: "Latin", tableName: "Localizable", source: source, developmentValue: "Latin", comment: nil) }

      /// en translation: Lighting settings
      ///
      /// Key: Lighting settings
      ///
      /// Locales: en, zh-Hans
      var lightingSettings: RswiftResources.StringResource { .init(key: "Lighting settings", tableName: "Localizable", source: source, developmentValue: "Lighting settings", comment: nil) }

      /// en translation: Log
      ///
      /// Key: Log
      ///
      /// Locales: en, zh-Hans
      var log: RswiftResources.StringResource { .init(key: "Log", tableName: "Localizable", source: source, developmentValue: "Log", comment: nil) }

      /// en translation: Make sure you are connected to the EDR of the corresponding device
      ///
      /// Key: Make sure you are connected to the EDR of the corresponding device
      ///
      /// Locales: en, zh-Hans
      var makeSureYouAreConnectedToTheEDROfTheCorrespondingDevice: RswiftResources.StringResource { .init(key: "Make sure you are connected to the EDR of the corresponding device", tableName: "Localizable", source: source, developmentValue: "Make sure you are connected to the EDR of the corresponding device", comment: nil) }

      /// en translation: Massage
      ///
      /// Key: Massage
      ///
      /// Locales: en, zh-Hans
      var massage: RswiftResources.StringResource { .init(key: "Massage", tableName: "Localizable", source: source, developmentValue: "Massage", comment: nil) }

      /// en translation: Microphone settings
      ///
      /// Key: Microphone settings
      ///
      /// Locales: en, zh-Hans
      var microphoneSettings: RswiftResources.StringResource { .init(key: "Microphone settings", tableName: "Localizable", source: source, developmentValue: "Microphone settings", comment: nil) }

      /// en translation: Microphone switching settings
      ///
      /// Key: Microphone switching settings
      ///
      /// Locales: en, zh-Hans
      var microphoneSwitchingSettings: RswiftResources.StringResource { .init(key: "Microphone switching settings", tableName: "Localizable", source: source, developmentValue: "Microphone switching settings", comment: nil) }

      /// en translation: Mode settings
      ///
      /// Key: Mode settings
      ///
      /// Locales: en, zh-Hans
      var modeSettings: RswiftResources.StringResource { .init(key: "Mode settings", tableName: "Localizable", source: source, developmentValue: "Mode settings", comment: nil) }

      /// en translation: Mode switching settings
      ///
      /// Key: Mode switching settings
      ///
      /// Locales: en, zh-Hans
      var modeSwitchingSettings: RswiftResources.StringResource { .init(key: "Mode switching settings", tableName: "Localizable", source: source, developmentValue: "Mode switching settings", comment: nil) }

      /// en translation: Mon
      ///
      /// Key: Mon
      ///
      /// Locales: en, zh-Hans
      var mon: RswiftResources.StringResource { .init(key: "Mon", tableName: "Localizable", source: source, developmentValue: "Mon", comment: nil) }

      /// en translation: Motion
      ///
      /// Key: Motion
      ///
      /// Locales: en, zh-Hans
      var motion: RswiftResources.StringResource { .init(key: "Motion", tableName: "Localizable", source: source, developmentValue: "Motion", comment: nil) }

      /// en translation: Natural
      ///
      /// Key: Natural
      ///
      /// Locales: en, zh-Hans
      var natural: RswiftResources.StringResource { .init(key: "Natural", tableName: "Localizable", source: source, developmentValue: "Natural", comment: nil) }

      /// en translation: Need Response Switch
      ///
      /// Key: Need Response Switch
      ///
      /// Locales: en, zh-Hans
      var needResponseSwitch: RswiftResources.StringResource { .init(key: "Need Response Switch", tableName: "Localizable", source: source, developmentValue: "Need Response Switch", comment: nil) }

      /// en translation: Need to import the file into: [Document/gif2rgb] folder
      ///
      /// Key: Need to import the file into: [Document/gif2rgb] folder
      ///
      /// Locales: en, zh-Hans
      var needToImportTheFileIntoDocumentGif2rgbFolder: RswiftResources.StringResource { .init(key: "Need to import the file into: [Document/gif2rgb] folder", tableName: "Localizable", source: source, developmentValue: "Need to import the file into: [Document/gif2rgb] folder", comment: nil) }

      /// en translation: NickName
      ///
      /// Key: NickName
      ///
      /// Locales: en, zh-Hans
      var nickName: RswiftResources.StringResource { .init(key: "NickName", tableName: "Localizable", source: source, developmentValue: "NickName", comment: nil) }

      /// en translation: No file selected
      ///
      /// Key: No file selected
      ///
      /// Locales: en, zh-Hans
      var noFileSelected: RswiftResources.StringResource { .init(key: "No file selected", tableName: "Localizable", source: source, developmentValue: "No file selected", comment: nil) }

      /// en translation: No need to transmit
      ///
      /// Key: No need to transmit
      ///
      /// Locales: en, zh-Hans
      var noNeedToTransmit: RswiftResources.StringResource { .init(key: "No need to transmit", tableName: "Localizable", source: source, developmentValue: "No need to transmit", comment: nil) }

      /// en translation: Not enough space
      ///
      /// Key: Not enough space
      ///
      /// Locales: en, zh-Hans
      var notEnoughSpace: RswiftResources.StringResource { .init(key: "Not enough space", tableName: "Localizable", source: source, developmentValue: "Not enough space", comment: nil) }

      /// en translation: Notify/turn off ANC change monitoring
      ///
      /// Key: Notify/turn off ANC change monitoring
      ///
      /// Locales: en, zh-Hans
      var notifyTurnOffANCChangeMonitoring: RswiftResources.StringResource { .init(key: "Notify/turn off ANC change monitoring", tableName: "Localizable", source: source, developmentValue: "Notify/turn off ANC change monitoring", comment: nil) }

      /// en translation: Number of files
      ///
      /// Key: Number of files
      ///
      /// Locales: en, zh-Hans
      var numberOfFiles: RswiftResources.StringResource { .init(key: "Number of files", tableName: "Localizable", source: source, developmentValue: "Number of files", comment: nil) }

      /// en translation: OK
      ///
      /// Key: OK
      ///
      /// Locales: en, zh-Hans
      var oK: RswiftResources.StringResource { .init(key: "OK", tableName: "Localizable", source: source, developmentValue: "OK", comment: nil) }

      /// en translation: OTA
      ///
      /// Key: OTA
      ///
      /// Locales: en, zh-Hans
      var otA: RswiftResources.StringResource { .init(key: "OTA", tableName: "Localizable", source: source, developmentValue: "OTA", comment: nil) }

      /// en translation: OTA Custom Command
      ///
      /// Key: OTA Custom Command
      ///
      /// Locales: en, zh-Hans
      var otaCustomCommand: RswiftResources.StringResource { .init(key: "OTA Custom Command", tableName: "Localizable", source: source, developmentValue: "OTA Custom Command", comment: nil) }

      /// en translation: OTA Success!
      ///
      /// Key: OTA Success!
      ///
      /// Locales: en, zh-Hans
      var otaSuccess: RswiftResources.StringResource { .init(key: "OTA Success!", tableName: "Localizable", source: source, developmentValue: "OTA Success!", comment: nil) }

      /// en translation: OTA fail
      ///
      /// Key: OTA fail
      ///
      /// Locales: en, zh-Hans
      var otaFail: RswiftResources.StringResource { .init(key: "OTA fail", tableName: "Localizable", source: source, developmentValue: "OTA fail", comment: nil) }

      /// en translation: OTA not started yet
      ///
      /// Key: OTA not started yet
      ///
      /// Locales: en, zh-Hans
      var otaNotStartedYet: RswiftResources.StringResource { .init(key: "OTA not started yet", tableName: "Localizable", source: source, developmentValue: "OTA not started yet", comment: nil) }

      /// en translation: Once
      ///
      /// Key: Once
      ///
      /// Locales: en, zh-Hans
      var once: RswiftResources.StringResource { .init(key: "Once", tableName: "Localizable", source: source, developmentValue: "Once", comment: nil) }

      /// en translation: Only 5 can be added
      ///
      /// Key: Only 5 can be added
      ///
      /// Locales: en, zh-Hans
      var only5CanBeAdded: RswiftResources.StringResource { .init(key: "Only 5 can be added", tableName: "Localizable", source: source, developmentValue: "Only 5 can be added", comment: nil) }

      /// en translation: Opened
      ///
      /// Key: Opened
      ///
      /// Locales: en, zh-Hans
      var opened: RswiftResources.StringResource { .init(key: "Opened", tableName: "Localizable", source: source, developmentValue: "Opened", comment: nil) }

      /// en translation: Other Protocol
      ///
      /// Key: Other Protocol
      ///
      /// Locales: en, zh-Hans
      var otherProtocol: RswiftResources.StringResource { .init(key: "Other Protocol", tableName: "Localizable", source: source, developmentValue: "Other Protocol", comment: nil) }

      /// en translation: PCM 2 WTS Record Finish
      ///
      /// Key: PCM 2 WTS Record Finish
      ///
      /// Locales: en, zh-Hans
      var pcm2WTSRecordFinish: RswiftResources.StringResource { .init(key: "PCM 2 WTS Record Finish", tableName: "Localizable", source: source, developmentValue: "PCM 2 WTS Record Finish", comment: nil) }

      /// en translation: PCM to WTS
      ///
      /// Key: PCM to WTS
      ///
      /// Locales: en, zh-Hans
      var pcmToWTS: RswiftResources.StringResource { .init(key: "PCM to WTS", tableName: "Localizable", source: source, developmentValue: "PCM to WTS", comment: nil) }

      /// en translation: Please allow microphone access
      ///
      /// Key: Please allow microphone access
      ///
      /// Locales: en, zh-Hans
      var pleaseAllowMicrophoneAccess: RswiftResources.StringResource { .init(key: "Please allow microphone access", tableName: "Localizable", source: source, developmentValue: "Please allow microphone access", comment: nil) }

      /// en translation: Please enter the filter prefix
      ///
      /// Key: Please enter the filter prefix
      ///
      /// Locales: en, zh-Hans
      var pleaseEnterTheFilterPrefix: RswiftResources.StringResource { .init(key: "Please enter the filter prefix", tableName: "Localizable", source: source, developmentValue: "Please enter the filter prefix", comment: nil) }

      /// en translation: Please enter the json content of the button configuration
      ///
      /// Key: Please enter the json content of the button configuration
      ///
      /// Locales: en, zh-Hans
      var pleaseEnterTheJsonContentOfTheButtonConfiguration: RswiftResources.StringResource { .init(key: "Please enter the json content of the button configuration", tableName: "Localizable", source: source, developmentValue: "Please enter the json content of the button configuration", comment: nil) }

      /// en translation: Please exit other modes first
      ///
      /// Key: Please exit other modes first
      ///
      /// Locales: en, zh-Hans
      var pleaseExitOtherModesFirst: RswiftResources.StringResource { .init(key: "Please exit other modes first", tableName: "Localizable", source: source, developmentValue: "Please exit other modes first", comment: nil) }

      /// en translation: Please import the pcm file into the Document/pcmData folder first
      ///
      /// Key: Please import the pcm file into the Document/pcmData folder first
      ///
      /// Locales: en, zh-Hans
      var pleaseImportThePcmFileIntoTheDocumentPcmDataFolderFirst: RswiftResources.StringResource { .init(key: "Please import the pcm file into the Document/pcmData folder first", tableName: "Localizable", source: source, developmentValue: "Please import the pcm file into the Document/pcmData folder first", comment: nil) }

      /// en translation: Please input data
      ///
      /// Key: Please input data
      ///
      /// Locales: en, zh-Hans
      var pleaseInputData: RswiftResources.StringResource { .init(key: "Please input data", tableName: "Localizable", source: source, developmentValue: "Please input data", comment: nil) }

      /// en translation: Please obtain the device prompt information first
      ///
      /// Key: Please obtain the device prompt information first
      ///
      /// Locales: en, zh-Hans
      var pleaseObtainTheDevicePromptInformationFirst: RswiftResources.StringResource { .init(key: "Please obtain the device prompt information first", tableName: "Localizable", source: source, developmentValue: "Please obtain the device prompt information first", comment: nil) }

      /// en translation: Pop
      ///
      /// Key: Pop
      ///
      /// Locales: en, zh-Hans
      var pop: RswiftResources.StringResource { .init(key: "Pop", tableName: "Localizable", source: source, developmentValue: "Pop", comment: nil) }

      /// en translation: Prompt tone packing
      ///
      /// Key: Prompt tone packing
      ///
      /// Locales: en, zh-Hans
      var promptTonePacking: RswiftResources.StringResource { .init(key: "Prompt tone packing", tableName: "Localizable", source: source, developmentValue: "Prompt tone packing", comment: nil) }

      /// en translation: Prompt tone replacement
      ///
      /// Key: Prompt tone replacement
      ///
      /// Locales: en, zh-Hans
      var promptToneReplacement: RswiftResources.StringResource { .init(key: "Prompt tone replacement", tableName: "Localizable", source: source, developmentValue: "Prompt tone replacement", comment: nil) }

      /// en translation: Read AI platform information
      ///
      /// Key: Read AI platform information
      ///
      /// Locales: en, zh-Hans
      var readAIPlatformInformation: RswiftResources.StringResource { .init(key: "Read AI platform information", tableName: "Localizable", source: source, developmentValue: "Read AI platform information", comment: nil) }

      /// en translation: Read back completed
      ///
      /// Key: Read back completed
      ///
      /// Locales: en, zh-Hans
      var readBackCompleted: RswiftResources.StringResource { .init(key: "Read back completed", tableName: "Localizable", source: source, developmentValue: "Read back completed", comment: nil) }

      /// en translation: Reading back start:
      ///
      /// Key: Reading back start:
      ///
      /// Locales: en, zh-Hans
      var readingBackStart: RswiftResources.StringResource { .init(key: "Reading back start:", tableName: "Localizable", source: source, developmentValue: "Reading back start:", comment: nil) }

      /// en translation: Reading error
      ///
      /// Key: Reading error
      ///
      /// Locales: en, zh-Hans
      var readingError: RswiftResources.StringResource { .init(key: "Reading error", tableName: "Localizable", source: source, developmentValue: "Reading error", comment: nil) }

      /// en translation: Ready to complete
      ///
      /// Key: Ready to complete
      ///
      /// Locales: en, zh-Hans
      var readyToComplete: RswiftResources.StringResource { .init(key: "Ready to complete", tableName: "Localizable", source: source, developmentValue: "Ready to complete", comment: nil) }

      /// en translation: Receive data: %@ bytes.
      ///
      /// Key: Receive data: %@ bytes.
      ///
      /// Locales: en, zh-Hans
      var receiveDataBytes: RswiftResources.StringResource1<String> { .init(key: "Receive data: %@ bytes.", tableName: "Localizable", source: source, developmentValue: "Receive data: %@ bytes.", comment: nil) }

      /// en translation: Receive data: %@ bytes. Need Response
      ///
      /// Key: Receive data: %@ bytes. Need Response
      ///
      /// Locales: en, zh-Hans
      var receiveDataBytesNeedResponse: RswiftResources.StringResource1<String> { .init(key: "Receive data: %@ bytes. Need Response", tableName: "Localizable", source: source, developmentValue: "Receive data: %@ bytes. Need Response", comment: nil) }

      /// en translation: Reconnect
      ///
      /// Key: Reconnect
      ///
      /// Locales: en, zh-Hans
      var reconnect: RswiftResources.StringResource { .init(key: "Reconnect", tableName: "Localizable", source: source, developmentValue: "Reconnect", comment: nil) }

      /// en translation: Record PCM
      ///
      /// Key: Record PCM
      ///
      /// Locales: en, zh-Hans
      var recordPCM: RswiftResources.StringResource { .init(key: "Record PCM", tableName: "Localizable", source: source, developmentValue: "Record PCM", comment: nil) }

      /// en translation: Refresh
      ///
      /// Key: Refresh
      ///
      /// Locales: en, zh-Hans
      var refresh: RswiftResources.StringResource { .init(key: "Refresh", tableName: "Localizable", source: source, developmentValue: "Refresh", comment: nil) }

      /// en translation: Regular
      ///
      /// Key: Regular
      ///
      /// Locales: en, zh-Hans
      var regular: RswiftResources.StringResource { .init(key: "Regular", tableName: "Localizable", source: source, developmentValue: "Regular", comment: nil) }

      /// en translation: Remove Sources
      ///
      /// Key: Remove Sources
      ///
      /// Locales: en, zh-Hans
      var removeSources: RswiftResources.StringResource { .init(key: "Remove Sources", tableName: "Localizable", source: source, developmentValue: "Remove Sources", comment: nil) }

      /// en translation: Rename
      ///
      /// Key: Rename
      ///
      /// Locales: en, zh-Hans
      var rename: RswiftResources.StringResource { .init(key: "Rename", tableName: "Localizable", source: source, developmentValue: "Rename", comment: nil) }

      /// en translation: Rename the index name of the beep
      ///
      /// Key: Rename the index name of the beep
      ///
      /// Locales: en, zh-Hans
      var renameTheIndexNameOfTheBeep: RswiftResources.StringResource { .init(key: "Rename the index name of the beep", tableName: "Localizable", source: source, developmentValue: "Rename the index name of the beep", comment: nil) }

      /// en translation: Reserved area size
      ///
      /// Key: Reserved area size
      ///
      /// Locales: en, zh-Hans
      var reservedAreaSize: RswiftResources.StringResource { .init(key: "Reserved area size", tableName: "Localizable", source: source, developmentValue: "Reserved area size", comment: nil) }

      /// en translation: Reset failed
      ///
      /// Key: Reset failed
      ///
      /// Locales: en, zh-Hans
      var resetFailed: RswiftResources.StringResource { .init(key: "Reset failed", tableName: "Localizable", source: source, developmentValue: "Reset failed", comment: nil) }

      /// en translation: Restart successful
      ///
      /// Key: Restart successful
      ///
      /// Locales: en, zh-Hans
      var restartSuccessful: RswiftResources.StringResource { .init(key: "Restart successful", tableName: "Localizable", source: source, developmentValue: "Restart successful", comment: nil) }

      /// en translation: Restarting
      ///
      /// Key: Restarting
      ///
      /// Locales: en, zh-Hans
      var restarting: RswiftResources.StringResource { .init(key: "Restarting", tableName: "Localizable", source: source, developmentValue: "Restarting", comment: nil) }

      /// en translation: Ring name:
      ///
      /// Key: Ring name:
      ///
      /// Locales: en, zh-Hans
      var ringName: RswiftResources.StringResource { .init(key: "Ring name:", tableName: "Localizable", source: source, developmentValue: "Ring name:", comment: nil) }

      /// en translation: Rock
      ///
      /// Key: Rock
      ///
      /// Locales: en, zh-Hans
      var rock: RswiftResources.StringResource { .init(key: "Rock", tableName: "Localizable", source: source, developmentValue: "Rock", comment: nil) }

      /// en translation: SPO2
      ///
      /// Key: SPO2
      ///
      /// Locales: en, zh-Hans
      var spo2: RswiftResources.StringResource { .init(key: "SPO2", tableName: "Localizable", source: source, developmentValue: "SPO2", comment: nil) }

      /// en translation: Sat
      ///
      /// Key: Sat
      ///
      /// Locales: en, zh-Hans
      var sat: RswiftResources.StringResource { .init(key: "Sat", tableName: "Localizable", source: source, developmentValue: "Sat", comment: nil) }

      /// en translation: Save  OPUS data
      ///
      /// Key: Save  OPUS data
      ///
      /// Locales: en, zh-Hans
      var saveOPUSData: RswiftResources.StringResource { .init(key: "Save  OPUS data", tableName: "Localizable", source: source, developmentValue: "Save  OPUS data", comment: nil) }

      /// en translation: Save PCM data
      ///
      /// Key: Save PCM data
      ///
      /// Locales: en, zh-Hans
      var savePCMData: RswiftResources.StringResource { .init(key: "Save PCM data", tableName: "Localizable", source: source, developmentValue: "Save PCM data", comment: nil) }

      /// en translation: Scan Device
      ///
      /// Key: Scan Device
      ///
      /// Locales: en, zh-Hans
      var scanDevice: RswiftResources.StringResource { .init(key: "Scan Device", tableName: "Localizable", source: source, developmentValue: "Scan Device", comment: nil) }

      /// en translation: Search
      ///
      /// Key: Search
      ///
      /// Locales: en, zh-Hans
      var search: RswiftResources.StringResource { .init(key: "Search", tableName: "Localizable", source: source, developmentValue: "Search", comment: nil) }

      /// en translation: Search Device
      ///
      /// Key: Search Device
      ///
      /// Locales: en, zh-Hans
      var searchDevice: RswiftResources.StringResource { .init(key: "Search Device", tableName: "Localizable", source: source, developmentValue: "Search Device", comment: nil) }

      /// en translation: Searching on the device
      ///
      /// Key: Searching on the device
      ///
      /// Locales: en, zh-Hans
      var searchingOnTheDevice: RswiftResources.StringResource { .init(key: "Searching on the device", tableName: "Localizable", source: source, developmentValue: "Searching on the device", comment: nil) }

      /// en translation: Select
      ///
      /// Key: Select
      ///
      /// Locales: en, zh-Hans
      var select: RswiftResources.StringResource { .init(key: "Select", tableName: "Localizable", source: source, developmentValue: "Select", comment: nil) }

      /// en translation: Select 4G OTA file
      ///
      /// Key: Select 4G OTA file
      ///
      /// Locales: en, zh-Hans
      var select4GOTAFile: RswiftResources.StringResource { .init(key: "Select 4G OTA file", tableName: "Localizable", source: source, developmentValue: "Select 4G OTA file", comment: nil) }

      /// en translation: Select Button Configuration
      ///
      /// Key: Select Button Configuration
      ///
      /// Locales: en, zh-Hans
      var selectButtonConfiguration: RswiftResources.StringResource { .init(key: "Select Button Configuration", tableName: "Localizable", source: source, developmentValue: "Select Button Configuration", comment: nil) }

      /// en translation: Select File
      ///
      /// Key: Select File
      ///
      /// Locales: en, zh-Hans
      var selectFile: RswiftResources.StringResource { .init(key: "Select File", tableName: "Localizable", source: source, developmentValue: "Select File", comment: nil) }

      /// en translation: Select File Handle
      ///
      /// Key: Select File Handle
      ///
      /// Locales: en, zh-Hans
      var selectFileHandle: RswiftResources.StringResource { .init(key: "Select File Handle", tableName: "Localizable", source: source, developmentValue: "Select File Handle", comment: nil) }

      /// en translation: Select OTA file
      ///
      /// Key: Select OTA file
      ///
      /// Locales: en, zh-Hans
      var selectOTAFile: RswiftResources.StringResource { .init(key: "Select OTA file", tableName: "Localizable", source: source, developmentValue: "Select OTA file", comment: nil) }

      /// en translation: Select background
      ///
      /// Key: Select background
      ///
      /// Locales: en, zh-Hans
      var selectBackground: RswiftResources.StringResource { .init(key: "Select background", tableName: "Localizable", source: source, developmentValue: "Select background", comment: nil) }

      /// en translation: Select dial
      ///
      /// Key: Select dial
      ///
      /// Locales: en, zh-Hans
      var selectDial: RswiftResources.StringResource { .init(key: "Select dial", tableName: "Localizable", source: source, developmentValue: "Select dial", comment: nil) }

      /// en translation: Select download method
      ///
      /// Key: Select download method
      ///
      /// Locales: en, zh-Hans
      var selectDownloadMethod: RswiftResources.StringResource { .init(key: "Select download method", tableName: "Localizable", source: source, developmentValue: "Select download method", comment: nil) }

      /// en translation: Select the way to read back
      ///
      /// Key: Select the way to read back
      ///
      /// Locales: en, zh-Hans
      var selectTheWayToReadBack: RswiftResources.StringResource { .init(key: "Select the way to read back", tableName: "Localizable", source: source, developmentValue: "Select the way to read back", comment: nil) }

      /// en translation: Send
      ///
      /// Key: Send
      ///
      /// Locales: en, zh-Hans
      var send: RswiftResources.StringResource { .init(key: "Send", tableName: "Localizable", source: source, developmentValue: "Send", comment: nil) }

      /// en translation: Send Opus
      ///
      /// Key: Send Opus
      ///
      /// Locales: en, zh-Hans
      var sendOpus: RswiftResources.StringResource { .init(key: "Send Opus", tableName: "Localizable", source: source, developmentValue: "Send Opus", comment: nil) }

      /// en translation: Send and set screen pictures
      ///
      /// Key: Send and set screen pictures
      ///
      /// Locales: en, zh-Hans
      var sendAndSetScreenPictures: RswiftResources.StringResource { .init(key: "Send and set screen pictures", tableName: "Localizable", source: source, developmentValue: "Send and set screen pictures", comment: nil) }

      /// en translation: Send rgb bin
      ///
      /// Key: Send rgb bin
      ///
      /// Locales: en, zh-Hans
      var sendRgbBin: RswiftResources.StringResource { .init(key: "Send rgb bin", tableName: "Localizable", source: source, developmentValue: "Send rgb bin", comment: nil) }

      /// en translation: Send tone.cfg
      ///
      /// Key: Send tone.cfg
      ///
      /// Locales: en, zh-Hans
      var sendToneCfg: RswiftResources.StringResource { .init(key: "Send tone.cfg", tableName: "Localizable", source: source, developmentValue: "Send tone.cfg", comment: nil) }

      /// en translation: Set flashlight
      ///
      /// Key: Set flashlight
      ///
      /// Locales: en, zh-Hans
      var setFlashlight: RswiftResources.StringResource { .init(key: "Set flashlight", tableName: "Localizable", source: source, developmentValue: "Set flashlight", comment: nil) }

      /// en translation: Set screen brightness
      ///
      /// Key: Set screen brightness
      ///
      /// Locales: en, zh-Hans
      var setScreenBrightness: RswiftResources.StringResource { .init(key: "Set screen brightness", tableName: "Localizable", source: source, developmentValue: "Set screen brightness", comment: nil) }

      /// en translation: Setting
      ///
      /// Key: Setting
      ///
      /// Locales: en, zh-Hans
      var setting: RswiftResources.StringResource { .init(key: "Setting", tableName: "Localizable", source: source, developmentValue: "Setting", comment: nil) }

      /// en translation: Sleep Data
      ///
      /// Key: Sleep Data
      ///
      /// Locales: en, zh-Hans
      var sleepData: RswiftResources.StringResource { .init(key: "Sleep Data", tableName: "Localizable", source: source, developmentValue: "Sleep Data", comment: nil) }

      /// en translation: Small File
      ///
      /// Key: Small File
      ///
      /// Locales: en, zh-Hans
      var smallFile: RswiftResources.StringResource { .init(key: "Small File", tableName: "Localizable", source: source, developmentValue: "Small File", comment: nil) }

      /// en translation: Start
      ///
      /// Key: Start
      ///
      /// Locales: en, zh-Hans
      var start: RswiftResources.StringResource { .init(key: "Start", tableName: "Localizable", source: source, developmentValue: "Start", comment: nil) }

      /// en translation: Start OTA
      ///
      /// Key: Start OTA
      ///
      /// Locales: en, zh-Hans
      var startOTA: RswiftResources.StringResource { .init(key: "Start OTA", tableName: "Localizable", source: source, developmentValue: "Start OTA", comment: nil) }

      /// en translation: Start Package tone.cfg
      ///
      /// Key: Start Package tone.cfg
      ///
      /// Locales: en, zh-Hans
      var startPackageToneCfg: RswiftResources.StringResource { .init(key: "Start Package tone.cfg", tableName: "Localizable", source: source, developmentValue: "Start Package tone.cfg", comment: nil) }

      /// en translation: Start Record Translate
      ///
      /// Key: Start Record Translate
      ///
      /// Locales: en, zh-Hans
      var startRecordTranslate: RswiftResources.StringResource { .init(key: "Start Record Translate", tableName: "Localizable", source: source, developmentValue: "Start Record Translate", comment: nil) }

      /// en translation: Start Recorder
      ///
      /// Key: Start Recorder
      ///
      /// Locales: en, zh-Hans
      var startRecorder: RswiftResources.StringResource { .init(key: "Start Recorder", tableName: "Localizable", source: source, developmentValue: "Start Recorder", comment: nil) }

      /// en translation: Start create rgb
      ///
      /// Key: Start create rgb
      ///
      /// Locales: en, zh-Hans
      var startCreateRgb: RswiftResources.StringResource { .init(key: "Start create rgb", tableName: "Localizable", source: source, developmentValue: "Start create rgb", comment: nil) }

      /// en translation: Step Count
      ///
      /// Key: Step Count
      ///
      /// Locales: en, zh-Hans
      var stepCount: RswiftResources.StringResource { .init(key: "Step Count", tableName: "Localizable", source: source, developmentValue: "Step Count", comment: nil) }

      /// en translation: Stop OTA
      ///
      /// Key: Stop OTA
      ///
      /// Locales: en, zh-Hans
      var stopOTA: RswiftResources.StringResource { .init(key: "Stop OTA", tableName: "Localizable", source: source, developmentValue: "Stop OTA", comment: nil) }

      /// en translation: Stop recorder
      ///
      /// Key: Stop recorder
      ///
      /// Locales: en, zh-Hans
      var stopRecorder: RswiftResources.StringResource { .init(key: "Stop recorder", tableName: "Localizable", source: source, developmentValue: "Stop recorder", comment: nil) }

      /// en translation: Successfully modified
      ///
      /// Key: Successfully modified
      ///
      /// Locales: en, zh-Hans
      var successfullyModified: RswiftResources.StringResource { .init(key: "Successfully modified", tableName: "Localizable", source: source, developmentValue: "Successfully modified", comment: nil) }

      /// en translation: Sun
      ///
      /// Key: Sun
      ///
      /// Locales: en, zh-Hans
      var sun: RswiftResources.StringResource { .init(key: "Sun", tableName: "Localizable", source: source, developmentValue: "Sun", comment: nil) }

      /// en translation: Sync Contacts
      ///
      /// Key: Sync Contacts
      ///
      /// Locales: en, zh-Hans
      var syncContacts: RswiftResources.StringResource { .init(key: "Sync Contacts", tableName: "Localizable", source: source, developmentValue: "Sync Contacts", comment: nil) }

      /// en translation: Synchronize weather
      ///
      /// Key: Synchronize weather
      ///
      /// Locales: en, zh-Hans
      var synchronizeWeather: RswiftResources.StringResource { .init(key: "Synchronize weather", tableName: "Localizable", source: source, developmentValue: "Synchronize weather", comment: nil) }

      /// en translation: System Scan History
      ///
      /// Key: System Scan History
      ///
      /// Locales: en, zh-Hans
      var systemScanHistory: RswiftResources.StringResource { .init(key: "System Scan History", tableName: "Localizable", source: source, developmentValue: "System Scan History", comment: nil) }

      /// en translation: The device does not support LED settings
      ///
      /// Key: The device does not support LED settings
      ///
      /// Locales: en, zh-Hans
      var theDeviceDoesNotSupportLEDSettings: RswiftResources.StringResource { .init(key: "The device does not support LED settings", tableName: "Localizable", source: source, developmentValue: "The device does not support LED settings", comment: nil) }

      /// en translation: The dial file setting failed. Check the reliability of the dial file.
      ///
      /// Key: The dial file setting failed. Check the reliability of the dial file.
      ///
      /// Locales: en, zh-Hans
      var theDialFileSettingFailedCheckTheReliabilityOfTheDialFile: RswiftResources.StringResource { .init(key: "The dial file setting failed. Check the reliability of the dial file.", tableName: "Localizable", source: source, developmentValue: "The dial file setting failed. Check the reliability of the dial file.", comment: nil) }

      /// en translation: The downloaded files are stored in the [/transportFiles] folder of [documentDirectory]
      ///
      /// Key: The downloaded files are stored in the [/transportFiles] folder of [documentDirectory]
      ///
      /// Locales: en, zh-Hans
      var theDownloadedFilesAreStoredInTheTransportFilesFolderOfDocumentDirectory: RswiftResources.StringResource { .init(key: "The downloaded files are stored in the [/transportFiles] folder of [documentDirectory]", tableName: "Localizable", source: source, developmentValue: "The downloaded files are stored in the [/transportFiles] folder of [documentDirectory]", comment: nil) }

      /// en translation: The transmission is in progress. Repeated initiation is not allowed
      ///
      /// Key: The transmission is in progress. Repeated initiation is not allowed
      ///
      /// Locales: en, zh-Hans
      var theTransmissionIsInProgressRepeatedInitiationIsNotAllowed: RswiftResources.StringResource { .init(key: "The transmission is in progress. Repeated initiation is not allowed", tableName: "Localizable", source: source, developmentValue: "The transmission is in progress. Repeated initiation is not allowed", comment: nil) }

      /// en translation: The upgrade data has been sent and the device is being processed.
      ///
      /// Key: The upgrade data has been sent and the device is being processed.
      ///
      /// Locales: en, zh-Hans
      var theUpgradeDataHasBeenSentAndTheDeviceIsBeingProcessed: RswiftResources.StringResource { .init(key: "The upgrade data has been sent and the device is being processed.", tableName: "Localizable", source: source, developmentValue: "The upgrade data has been sent and the device is being processed.", comment: nil) }

      /// en translation: Thu
      ///
      /// Key: Thu
      ///
      /// Locales: en, zh-Hans
      var thu: RswiftResources.StringResource { .init(key: "Thu", tableName: "Localizable", source: source, developmentValue: "Thu", comment: nil) }

      /// en translation: Tips
      ///
      /// Key: Tips
      ///
      /// Locales: en, zh-Hans
      var tips: RswiftResources.StringResource { .init(key: "Tips", tableName: "Localizable", source: source, developmentValue: "Tips", comment: nil) }

      /// en translation: Transferring, confirm to exit?
      ///
      /// Key: Transferring, confirm to exit?
      ///
      /// Locales: en, zh-Hans
      var transferringConfirmToExit: RswiftResources.StringResource { .init(key: "Transferring, confirm to exit?", tableName: "Localizable", source: source, developmentValue: "Transferring, confirm to exit?", comment: nil) }

      /// en translation: Translate transfer
      ///
      /// Key: Translate transfer
      ///
      /// Locales: en, zh-Hans
      var translateTransfer: RswiftResources.StringResource { .init(key: "Translate transfer", tableName: "Localizable", source: source, developmentValue: "Translate transfer", comment: nil) }

      /// en translation: Transmitting...
      ///
      /// Key: Transmitting...
      ///
      /// Locales: en, zh-Hans
      var transmitting: RswiftResources.StringResource { .init(key: "Transmitting...", tableName: "Localizable", source: source, developmentValue: "Transmitting...", comment: nil) }

      /// en translation: Transport error：
      ///
      /// Key: Transport error：
      ///
      /// Locales: en, zh-Hans
      var transportError: RswiftResources.StringResource { .init(key: "Transport error：", tableName: "Localizable", source: source, developmentValue: "Transport error：", comment: nil) }

      /// en translation: Transport successful
      ///
      /// Key: Transport successful
      ///
      /// Locales: en, zh-Hans
      var transportSuccessful: RswiftResources.StringResource { .init(key: "Transport successful", tableName: "Localizable", source: source, developmentValue: "Transport successful", comment: nil) }

      /// en translation: Transported successfully
      ///
      /// Key: Transported successfully
      ///
      /// Locales: en, zh-Hans
      var transportedSuccessfully: RswiftResources.StringResource { .init(key: "Transported successfully", tableName: "Localizable", source: source, developmentValue: "Transported successfully", comment: nil) }

      /// en translation: Tue
      ///
      /// Key: Tue
      ///
      /// Locales: en, zh-Hans
      var tue: RswiftResources.StringResource { .init(key: "Tue", tableName: "Localizable", source: source, developmentValue: "Tue", comment: nil) }

      /// en translation: Turn on/off status notifications
      ///
      /// Key: Turn on/off status notifications
      ///
      /// Locales: en, zh-Hans
      var turnOnOffStatusNotifications: RswiftResources.StringResource { .init(key: "Turn on/off status notifications", tableName: "Localizable", source: source, developmentValue: "Turn on/off status notifications", comment: nil) }

      /// en translation: Unconnected
      ///
      /// Key: Unconnected
      ///
      /// Locales: en, zh-Hans
      var unconnected: RswiftResources.StringResource { .init(key: "Unconnected", tableName: "Localizable", source: source, developmentValue: "Unconnected", comment: nil) }

      /// en translation: Unopened
      ///
      /// Key: Unopened
      ///
      /// Locales: en, zh-Hans
      var unopened: RswiftResources.StringResource { .init(key: "Unopened", tableName: "Localizable", source: source, developmentValue: "Unopened", comment: nil) }

      /// en translation: Update
      ///
      /// Key: Update
      ///
      /// Locales: en, zh-Hans
      var update: RswiftResources.StringResource { .init(key: "Update", tableName: "Localizable", source: source, developmentValue: "Update", comment: nil) }

      /// en translation: Upgrading
      ///
      /// Key: Upgrading
      ///
      /// Locales: en, zh-Hans
      var upgrading: RswiftResources.StringResource { .init(key: "Upgrading", tableName: "Localizable", source: source, developmentValue: "Upgrading", comment: nil) }

      /// en translation: Upgrading (Phase 1)
      ///
      /// Key: Upgrading (Phase 1)
      ///
      /// Locales: en, zh-Hans
      var upgradingPhase1: RswiftResources.StringResource { .init(key: "Upgrading (Phase 1)", tableName: "Localizable", source: source, developmentValue: "Upgrading (Phase 1)", comment: nil) }

      /// en translation: Upgrading (Phase 2)
      ///
      /// Key: Upgrading (Phase 2)
      ///
      /// Locales: en, zh-Hans
      var upgradingPhase2: RswiftResources.StringResource { .init(key: "Upgrading (Phase 2)", tableName: "Localizable", source: source, developmentValue: "Upgrading (Phase 2)", comment: nil) }

      /// en translation: Using ATT communication
      ///
      /// Key: Using ATT communication
      ///
      /// Locales: en, zh-Hans
      var usingATTCommunication: RswiftResources.StringResource { .init(key: "Using ATT communication", tableName: "Localizable", source: source, developmentValue: "Using ATT communication", comment: nil) }

      /// en translation: Voice transmission decoding
      ///
      /// Key: Voice transmission decoding
      ///
      /// Locales: en, zh-Hans
      var voiceTransmissionDecoding: RswiftResources.StringResource { .init(key: "Voice transmission decoding", tableName: "Localizable", source: source, developmentValue: "Voice transmission decoding", comment: nil) }

      /// en translation: Watch Dial
      ///
      /// Key: Watch Dial
      ///
      /// Locales: en, zh-Hans
      var watchDial: RswiftResources.StringResource { .init(key: "Watch Dial", tableName: "Localizable", source: source, developmentValue: "Watch Dial", comment: nil) }

      /// en translation: Weather
      ///
      /// Key: Weather
      ///
      /// Locales: en, zh-Hans
      var weather: RswiftResources.StringResource { .init(key: "Weather", tableName: "Localizable", source: source, developmentValue: "Weather", comment: nil) }

      /// en translation: Weather test
      ///
      /// Key: Weather test
      ///
      /// Locales: en, zh-Hans
      var weatherTest: RswiftResources.StringResource { .init(key: "Weather test", tableName: "Localizable", source: source, developmentValue: "Weather test", comment: nil) }

      /// en translation: Web
      ///
      /// Key: Web
      ///
      /// Locales: en, zh-Hans
      var web: RswiftResources.StringResource { .init(key: "Web", tableName: "Localizable", source: source, developmentValue: "Web", comment: nil) }

      /// en translation: Weight
      ///
      /// Key: Weight
      ///
      /// Locales: en, zh-Hans
      var weight: RswiftResources.StringResource { .init(key: "Weight", tableName: "Localizable", source: source, developmentValue: "Weight", comment: nil) }

      /// en translation: configuration successful
      ///
      /// Key: configuration successful
      ///
      /// Locales: en, zh-Hans
      var configurationSuccessful: RswiftResources.StringResource { .init(key: "configuration successful", tableName: "Localizable", source: source, developmentValue: "configuration successful", comment: nil) }

      /// en translation: data size
      ///
      /// Key: data size
      ///
      /// Locales: en, zh-Hans
      var dataSize: RswiftResources.StringResource { .init(key: "data size", tableName: "Localizable", source: source, developmentValue: "data size", comment: nil) }

      /// en translation: default rings
      ///
      /// Key: default rings
      ///
      /// Locales: en, zh-Hans
      var defaultRings: RswiftResources.StringResource { .init(key: "default rings", tableName: "Localizable", source: source, developmentValue: "default rings", comment: nil) }

      /// en translation: duration
      ///
      /// Key: duration
      ///
      /// Locales: en, zh-Hans
      var duration: RswiftResources.StringResource { .init(key: "duration", tableName: "Localizable", source: source, developmentValue: "duration", comment: nil) }

      /// en translation: index
      ///
      /// Key: index
      ///
      /// Locales: en, zh-Hans
      var index: RswiftResources.StringResource { .init(key: "index", tableName: "Localizable", source: source, developmentValue: "index", comment: nil) }

      /// en translation: initialize
      ///
      /// Key: initialize
      ///
      /// Locales: en, zh-Hans
      var initialize: RswiftResources.StringResource { .init(key: "initialize", tableName: "Localizable", source: source, developmentValue: "initialize", comment: nil) }

      /// en translation: input
      ///
      /// Key: input
      ///
      /// Locales: en, zh-Hans
      var input: RswiftResources.StringResource { .init(key: "input", tableName: "Localizable", source: source, developmentValue: "input", comment: nil) }

      /// en translation: json format error
      ///
      /// Key: json format error
      ///
      /// Locales: en, zh-Hans
      var jsonFormatError: RswiftResources.StringResource { .init(key: "json format error", tableName: "Localizable", source: source, developmentValue: "json format error", comment: nil) }

      /// en translation: operation type
      ///
      /// Key: operation type
      ///
      /// Locales: en, zh-Hans
      var operationType: RswiftResources.StringResource { .init(key: "operation type", tableName: "Localizable", source: source, developmentValue: "operation type", comment: nil) }

      /// en translation: pcm2wts success
      ///
      /// Key: pcm2wts success
      ///
      /// Locales: en, zh-Hans
      var pcm2wtsSuccess: RswiftResources.StringResource { .init(key: "pcm2wts success", tableName: "Localizable", source: source, developmentValue: "pcm2wts success", comment: nil) }

      /// en translation: peak
      ///
      /// Key: peak
      ///
      /// Locales: en, zh-Hans
      var peak: RswiftResources.StringResource { .init(key: "peak", tableName: "Localizable", source: source, developmentValue: "peak", comment: nil) }

      /// en translation: reboot
      ///
      /// Key: reboot
      ///
      /// Locales: en, zh-Hans
      var reboot: RswiftResources.StringResource { .init(key: "reboot", tableName: "Localizable", source: source, developmentValue: "reboot", comment: nil) }

      /// en translation: responde data: %@ bytes.
      ///
      /// Key: responde data: %@ bytes.
      ///
      /// Locales: en, zh-Hans
      var respondeDataBytes: RswiftResources.StringResource1<String> { .init(key: "responde data: %@ bytes.", tableName: "Localizable", source: source, developmentValue: "responde data: %@ bytes.", comment: nil) }

      /// en translation: s file list
      ///
      /// Key: s file list
      ///
      /// Locales: en, zh-Hans
      var sFileList: RswiftResources.StringResource { .init(key: "s file list", tableName: "Localizable", source: source, developmentValue: "s file list", comment: nil) }

      /// en translation: size
      ///
      /// Key: size
      ///
      /// Locales: en, zh-Hans
      var size: RswiftResources.StringResource { .init(key: "size", tableName: "Localizable", source: source, developmentValue: "size", comment: nil) }

      /// en translation: with standard headers
      ///
      /// Key: with standard headers
      ///
      /// Locales: en, zh-Hans
      var withStandardHeaders: RswiftResources.StringResource { .init(key: "with standard headers", tableName: "Localizable", source: source, developmentValue: "with standard headers", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 19 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `JLThemeRed`.
    var jlThemeRed: RswiftResources.ColorResource { .init(name: "JLThemeRed", path: [], bundle: bundle) }

    /// Color `bgColor`.
    var bgColor: RswiftResources.ColorResource { .init(name: "bgColor", path: [], bundle: bundle) }

    /// Color `btnBlue`.
    var btnBlue: RswiftResources.ColorResource { .init(name: "btnBlue", path: [], bundle: bundle) }

    /// Color `btnBlueText`.
    var btnBlueText: RswiftResources.ColorResource { .init(name: "btnBlueText", path: [], bundle: bundle) }

    /// Color `btnColorRedF12C2C`.
    var btnColorRedF12C2C: RswiftResources.ColorResource { .init(name: "btnColorRedF12C2C", path: [], bundle: bundle) }

    /// Color `fontBackText242424`.
    var fontBackText242424: RswiftResources.ColorResource { .init(name: "fontBackText242424", path: [], bundle: bundle) }

    /// Color `fontBackText4B4B4B`.
    var fontBackText4B4B4B: RswiftResources.ColorResource { .init(name: "fontBackText4B4B4B", path: [], bundle: bundle) }

    /// Color `fontBackText_40`.
    var fontBackText_40: RswiftResources.ColorResource { .init(name: "fontBackText_40", path: [], bundle: bundle) }

    /// Color `fontBackText_50`.
    var fontBackText_50: RswiftResources.ColorResource { .init(name: "fontBackText_50", path: [], bundle: bundle) }

    /// Color `fontBackText_60`.
    var fontBackText_60: RswiftResources.ColorResource { .init(name: "fontBackText_60", path: [], bundle: bundle) }

    /// Color `fontBackText_80`.
    var fontBackText_80: RswiftResources.ColorResource { .init(name: "fontBackText_80", path: [], bundle: bundle) }

    /// Color `fontBackText_90`.
    var fontBackText_90: RswiftResources.ColorResource { .init(name: "fontBackText_90", path: [], bundle: bundle) }

    /// Color `fontGrayText838383`.
    var fontGrayText838383: RswiftResources.ColorResource { .init(name: "fontGrayText838383", path: [], bundle: bundle) }

    /// Color `fontGrayTextF0F0F0`.
    var fontGrayTextF0F0F0: RswiftResources.ColorResource { .init(name: "fontGrayTextF0F0F0", path: [], bundle: bundle) }

    /// Color `lineColorF7F7F7`.
    var lineColorF7F7F7: RswiftResources.ColorResource { .init(name: "lineColorF7F7F7", path: [], bundle: bundle) }

    /// Color `lineColor_06`.
    var lineColor_06: RswiftResources.ColorResource { .init(name: "lineColor_06", path: [], bundle: bundle) }

    /// Color `tabBarTint`.
    var tabBarTint: RswiftResources.ColorResource { .init(name: "tabBarTint", path: [], bundle: bundle) }

    /// Color `themeColor`.
    var themeColor: RswiftResources.ColorResource { .init(name: "themeColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 80 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `ANI3.gif`.
    var ani3Gif: RswiftResources.ImageResource { .init(name: "ANI3.gif", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `ANI4.gif`.
    var ani4Gif: RswiftResources.ImageResource { .init(name: "ANI4.gif", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `VIE1`.
    var vie1: RswiftResources.ImageResource { .init(name: "VIE1", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `VIE2`.
    var vie2: RswiftResources.ImageResource { .init(name: "VIE2", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `about_logo`.
    var about_logo: RswiftResources.ImageResource { .init(name: "about_logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `auracast_bg`.
    var auracast_bg: RswiftResources.ImageResource { .init(name: "auracast_bg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cell_0`.
    var cell_0: RswiftResources.ImageResource { .init(name: "cell_0", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cell_01`.
    var cell_01: RswiftResources.ImageResource { .init(name: "cell_01", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cell_02`.
    var cell_02: RswiftResources.ImageResource { .init(name: "cell_02", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cell_03`.
    var cell_03: RswiftResources.ImageResource { .init(name: "cell_03", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cell_04`.
    var cell_04: RswiftResources.ImageResource { .init(name: "cell_04", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cell_charge`.
    var cell_charge: RswiftResources.ImageResource { .init(name: "cell_charge", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `csbg_001`.
    var csbg_001: RswiftResources.ImageResource { .init(name: "csbg_001", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `csbg_002`.
    var csbg_002: RswiftResources.ImageResource { .init(name: "csbg_002", path: [], bundle: bundle, locale: LocaleReference.none, onDemandResourceTags: nil) }

    /// Image `device_img_empty`.
    var device_img_empty: RswiftResources.ImageResource { .init(name: "device_img_empty", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `file`.
    var file: RswiftResources.ImageResource { .init(name: "file", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `folder`.
    var folder: RswiftResources.ImageResource { .init(name: "folder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `function_icon_click`.
    var function_icon_click: RswiftResources.ImageResource { .init(name: "function_icon_click", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `function_icon_connection`.
    var function_icon_connection: RswiftResources.ImageResource { .init(name: "function_icon_connection", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `function_icon_light`.
    var function_icon_light: RswiftResources.ImageResource { .init(name: "function_icon_light", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `function_icon_mic`.
    var function_icon_mic: RswiftResources.ImageResource { .init(name: "function_icon_mic", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `function_icon_mode`.
    var function_icon_mode: RswiftResources.ImageResource { .init(name: "function_icon_mode", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `function_icon_rename`.
    var function_icon_rename: RswiftResources.ImageResource { .init(name: "function_icon_rename", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `function_icon_update`.
    var function_icon_update: RswiftResources.ImageResource { .init(name: "function_icon_update", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `function_img_chargingbay`.
    var function_img_chargingbay: RswiftResources.ImageResource { .init(name: "function_img_chargingbay", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `function_img_earphone`.
    var function_img_earphone: RswiftResources.ImageResource { .init(name: "function_img_earphone", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `function_logo_auracast`.
    var function_logo_auracast: RswiftResources.ImageResource { .init(name: "function_logo_auracast", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_broadcast`.
    var icon_broadcast: RswiftResources.ImageResource { .init(name: "icon_broadcast", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_broadcast_near`.
    var icon_broadcast_near: RswiftResources.ImageResource { .init(name: "icon_broadcast_near", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_broadcast_on`.
    var icon_broadcast_on: RswiftResources.ImageResource { .init(name: "icon_broadcast_on", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_broadcast_on_01`.
    var icon_broadcast_on_01: RswiftResources.ImageResource { .init(name: "icon_broadcast_on_01", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_broadcast_on_02`.
    var icon_broadcast_on_02: RswiftResources.ImageResource { .init(name: "icon_broadcast_on_02", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_broadcast_on_03`.
    var icon_broadcast_on_03: RswiftResources.ImageResource { .init(name: "icon_broadcast_on_03", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_broadcast_on_04`.
    var icon_broadcast_on_04: RswiftResources.ImageResource { .init(name: "icon_broadcast_on_04", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_broadcast_on_05`.
    var icon_broadcast_on_05: RswiftResources.ImageResource { .init(name: "icon_broadcast_on_05", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_chargingbay`.
    var icon_chargingbay: RswiftResources.ImageResource { .init(name: "icon_chargingbay", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_choose`.
    var icon_choose: RswiftResources.ImageResource { .init(name: "icon_choose", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_close`.
    var icon_close: RswiftResources.ImageResource { .init(name: "icon_close", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_close_nol`.
    var icon_close_nol: RswiftResources.ImageResource { .init(name: "icon_close_nol", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_close_nor`.
    var icon_close_nor: RswiftResources.ImageResource { .init(name: "icon_close_nor", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_close_sel`.
    var icon_close_sel: RswiftResources.ImageResource { .init(name: "icon_close_sel", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_code_close`.
    var icon_code_close: RswiftResources.ImageResource { .init(name: "icon_code_close", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_code_open`.
    var icon_code_open: RswiftResources.ImageResource { .init(name: "icon_code_open", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_down_blue`.
    var icon_down_blue: RswiftResources.ImageResource { .init(name: "icon_down_blue", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_information`.
    var icon_information: RswiftResources.ImageResource { .init(name: "icon_information", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_left`.
    var icon_left: RswiftResources.ImageResource { .init(name: "icon_left", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_lock`.
    var icon_lock: RswiftResources.ImageResource { .init(name: "icon_lock", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_mode_nor`.
    var icon_mode_nor: RswiftResources.ImageResource { .init(name: "icon_mode_nor", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_mode_sel`.
    var icon_mode_sel: RswiftResources.ImageResource { .init(name: "icon_mode_sel", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_mute`.
    var icon_mute: RswiftResources.ImageResource { .init(name: "icon_mute", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_next`.
    var icon_next: RswiftResources.ImageResource { .init(name: "icon_next", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_next_black`.
    var icon_next_black: RswiftResources.ImageResource { .init(name: "icon_next_black", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_next_gray`.
    var icon_next_gray: RswiftResources.ImageResource { .init(name: "icon_next_gray", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_open`.
    var icon_open: RswiftResources.ImageResource { .init(name: "icon_open", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_open_nol`.
    var icon_open_nol: RswiftResources.ImageResource { .init(name: "icon_open_nol", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_open_nor`.
    var icon_open_nor: RswiftResources.ImageResource { .init(name: "icon_open_nor", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_open_sel`.
    var icon_open_sel: RswiftResources.ImageResource { .init(name: "icon_open_sel", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_return`.
    var icon_return: RswiftResources.ImageResource { .init(name: "icon_return", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_return_white`.
    var icon_return_white: RswiftResources.ImageResource { .init(name: "icon_return_white", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_right`.
    var icon_right: RswiftResources.ImageResource { .init(name: "icon_right", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_scan`.
    var icon_scan: RswiftResources.ImageResource { .init(name: "icon_scan", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_sound`.
    var icon_sound: RswiftResources.ImageResource { .init(name: "icon_sound", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `icon_sucess`.
    var icon_sucess: RswiftResources.ImageResource { .init(name: "icon_sucess", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `logo_new`.
    var logo_new: RswiftResources.ImageResource { .init(name: "logo_new", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mul_icon_bay_black`.
    var mul_icon_bay_black: RswiftResources.ImageResource { .init(name: "mul_icon_bay_black", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mul_icon_dongle_black`.
    var mul_icon_dongle_black: RswiftResources.ImageResource { .init(name: "mul_icon_dongle_black", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mul_icon_earphone_black`.
    var mul_icon_earphone_black: RswiftResources.ImageResource { .init(name: "mul_icon_earphone_black", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mul_icon_soundbox_black`.
    var mul_icon_soundbox_black: RswiftResources.ImageResource { .init(name: "mul_icon_soundbox_black", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `popup_icon_close`.
    var popup_icon_close: RswiftResources.ImageResource { .init(name: "popup_icon_close", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `scan_icon_flashlight`.
    var scan_icon_flashlight: RswiftResources.ImageResource { .init(name: "scan_icon_flashlight", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `scan_icon_flashlight_on`.
    var scan_icon_flashlight_on: RswiftResources.ImageResource { .init(name: "scan_icon_flashlight_on", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `scan_icon_photo`.
    var scan_icon_photo: RswiftResources.ImageResource { .init(name: "scan_icon_photo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `slider_02_nor`.
    var slider_02_nor: RswiftResources.ImageResource { .init(name: "slider_02_nor", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `slider_nor`.
    var slider_nor: RswiftResources.ImageResource { .init(name: "slider_nor", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `startpage_img_bg`.
    var startpage_img_bg: RswiftResources.ImageResource { .init(name: "startpage_img_bg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `startpage_img_logo`.
    var startpage_img_logo: RswiftResources.ImageResource { .init(name: "startpage_img_logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_icon_earphone_nor`.
    var tab_icon_earphone_nor: RswiftResources.ImageResource { .init(name: "tab_icon_earphone_nor", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_icon_earphone_sel`.
    var tab_icon_earphone_sel: RswiftResources.ImageResource { .init(name: "tab_icon_earphone_sel", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_icon_settle_nor`.
    var tab_icon_settle_nor: RswiftResources.ImageResource { .init(name: "tab_icon_settle_nor", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_icon_settle_sel`.
    var tab_icon_settle_sel: RswiftResources.ImageResource { .init(name: "tab_icon_settle_sel", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.file` struct is generated, and contains static references to 10 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `16k_16bit_1.opus`.
    var k_16bit_1Opus: RswiftResources.FileResource { .init(name: "16k_16bit_1", pathExtension: "opus", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `ANI3.gif`.
    var ani3Gif: RswiftResources.FileResource { .init(name: "ANI3", pathExtension: "gif", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `ANI4.gif`.
    var ani4Gif: RswiftResources.FileResource { .init(name: "ANI4", pathExtension: "gif", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `CodeExample.plist`.
    var codeExamplePlist: RswiftResources.FileResource { .init(name: "CodeExample", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `VIE1.png`.
    var vie1Png: RswiftResources.FileResource { .init(name: "VIE1", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `VIE2.png`.
    var vie2Png: RswiftResources.FileResource { .init(name: "VIE2", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `converted.pcm`.
    var convertedPcm: RswiftResources.FileResource { .init(name: "converted", pathExtension: "pcm", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `csbg_001.png`.
    var csbg_001Png: RswiftResources.FileResource { .init(name: "csbg_001", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `csbg_002.png`.
    var csbg_002Png: RswiftResources.FileResource { .init(name: "csbg_002", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `test_translation.opus`.
    var test_translationOpus: RswiftResources.FileResource { .init(name: "test_translation", pathExtension: "opus", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 1 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `EQSettingViewController`.
    var eqSettingViewController: RswiftResources.NibReference<UIKit.UIView> { .init(name: "EQSettingViewController", bundle: bundle) }

    func validate() throws {

    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }
  }
}